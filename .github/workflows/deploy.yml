name: Deploy KaiHelper to AWS Lambda

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SAM_CLI_TELEMETRY: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps (project + SAM)
        run: |
          python -m pip install --upgrade pip
          pip install aws-sam-cli
          pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Who am I
        run: aws sts get-caller-identity

      - name: Validate & Build (SAM)
        run: |
          sam validate
          sam build --no-cached   # no container needed for x86_64 & pure-Python deps

      - name: Deploy (SAM)
        run: |
          sam deploy \
            --stack-name kaihelper-stack \
            --capabilities CAPABILITY_IAM \
            --resolve-s3 \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --region ${{ secrets.AWS_REGION }} \
            --parameter-overrides \
              DB_USER='${{ secrets.DB_USER }}' \
              DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
              DB_HOST='${{ secrets.DB_HOST }}' \
              DB_NAME='${{ secrets.DB_NAME }}' \
              OPENAI_API_KEY='${{ secrets.OPENAI_API_KEY }}'
